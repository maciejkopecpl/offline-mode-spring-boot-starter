import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id "io.freefair.lombok" version "6.5.1"
    id 'org.springframework.boot' version '2.7.4' apply false
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'maven-publish'
    id 'java-library'
    id "jacoco"
    id "org.sonarqube" version "3.4.0.2513"
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group = 'pl.maciejkopec'
version = '1.0.1'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter'
    api 'org.springframework.boot:spring-boot-starter-aop'
    api 'org.springframework.boot:spring-boot-starter-json'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "maciejkopecpl_offline-mode-spring-boot-starter"
        property "sonar.organization", "maciejkopecpl"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jar {
    into("META-INF/maven/${project.group}/${project.name}") {
        from { generatePomFileForOfflineModeAppPublication }
        rename { it.replace('pom-default.xml', 'pom.xml') }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        offlineModeApp(MavenPublication) {
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'Offline Mode Spring Boot Starter'
                description = 'Offline Mode for Spring Boot'
                url = 'https://github.com/maciejkopecpl/offline-mode-spring-boot-starter'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'maciejkopecpl'
                        name = 'Maciej KopeÄ‡'
                        email = 'kontakt@maciejkopec.pl'
                        url = 'https://maciejkopec.pl/'
                    }
                }
                scm {
                    connection = 'scm:git://github.com/maciejkopecpl/offline-mode-spring-boot-starter.git'
                    developerConnection = 'scm:git:ssh://github.com:maciejkopecpl/offline-mode-spring-boot-starter.git'
                    url = 'https://github.com/maciejkopecpl/offline-mode-spring-boot-starter/tree/master'
                }

            }
        }
    }
}
signing {
    sign publishing.publications.offlineModeApp
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("ossrhUsername")
            password = System.getenv("ossrhPassword")
        }
    }
}
